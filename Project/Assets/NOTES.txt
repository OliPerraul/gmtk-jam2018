
Economy
Unit Lifetime
Unit value 
	Carrots and pumkins
Store

Debt (Pay back the debt)
	Pay back the debt

Unit physical representation
Unit Product
Unit Tools (Start with three tools)


TODO
Some Units can be walked over (altough they get destroyed)


Blocks
	Fertile
	Not Fertile


Player Movement
	push unit

    Click another block to cancel movement
    
	Click a crop to breaks/harvest or push
		Depending on the unit, clicking on the object either breaks it or pushes it


	TODO:
		Fix change target block while inbetween two blocks
		Fix going down block one level
		FIx wrong tile selectable. etc. types highlight.
		




	Establishment > Unit
	

	TODO
		Move up a levels  on the field
			--> IF implemented yields extra challenge

	Equip
	Tools
		Axe, Rack, Shovel





		                    // If second to last and job is 'Interact' then stop
                    if (interestBlock.unit != null)
                    {
                        if (t.parent == interestBlock.Count == 1)
                        {
                            path.Pop();
                            turn = false;
                            moving = false;

                            // Interact

                            Context.fsm.SwitchState("Interact", interestBlock.unit.gameObject);
                            return;

                        }
                    }





					

        public void FindSelectableBlocks()
        {

            // TODO block certain block

            //selectableBlocks = Level.Instance.blocks;

            //return;

            /// RECONSIDER THIS


            ComputeAdjacencyLists(jumpHeight, null);
            GetCurrentBlock();

            Queue<Block> process = new Queue<Block>();

            process.Enqueue(currentBlock);
            currentBlock.visited = true;
            //currentBlock.parent = ??  leave as null 

            while (process.Count > 0)
            {
                Block t = process.Dequeue();

                selectableBlocks.Add(t);
                t.selectable = true;

                foreach (Block block in t.adjacencyList)
                {
                    if (!block.visited)
                    {
                        block.parent = t;
                        block.visited = true;
                        block.distance = 1 + t.distance;
                        process.Enqueue(block);
                    }
                }

            }
        }


        protected void RemoveSelectableBlocks()
        {
            if (currentBlock != null)
            {
                currentBlock.current = false;
                currentBlock = null;
            }

            foreach (Block block in selectableBlocks)
            {
                block.Reset();
            }

            selectableBlocks.Clear();
        }


		//

		Flat Ground

		Tall Grass
		

		Trees

		Shops
			Kiosk
			Shop
	




		/// NOTE PUSHING OBJECT TOGETHER SWAPS POS??



		X2 X3 X4
		/// MULTIPLIER WHEN PUSHED ITEMS IN A ROW
